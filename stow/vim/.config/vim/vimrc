"       _
"__   _(_)_ __ ___  _ __ ___
"\ \ / / | '_ ` _ \| '__/ __|
" \ V /| | | | | | | | | (__
"  \_/ |_|_| |_| |_|_|  \___|
"============================

"XDG OVERRIDES
set undodir=$XDG_DATA_HOME/vim/undo
set directory=$XDG_DATA_HOME/vim/swap
set backupdir=$XDG_DATA_HOME/vim/backup
set viewdir=$XDG_DATA_HOME/vim/view
set viminfo+='1000,n$XDG_DATA_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after

"VIM-PLUG AUTO-LOAD
" if empty(glob('/usr/local/share/vim/autoload/plug.vim'))
" 	silent !curl -fLo /usr/local/share/vim/autoload/plug.vim --create-dirs
" 				\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
" 	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
" endif

"LINTING AND LSP PRE-CONFIG
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['prettier', 'eslint'],
\}
let g:ale_completion_enabled = 1

"PLUG-IN LIST
call plug#begin('~/.config/vim/plugged')
	Plug 'tpope/vim-sensible'
	Plug 'tpope/vim-vinegar'
	Plug 'tpope/vim-commentary'
	Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
	Plug 'junegunn/fzf.vim'
	Plug 'dense-analysis/ale'
	Plug 'mhinz/vim-signify'
	Plug 'rhlobo/vim-super-retab'
	Plug 'jszakmeister/vim-togglecursor'
	Plug 'terryma/vim-multiple-cursors'
	Plug 'millermedeiros/vim-statline'
	Plug 'pangloss/vim-javascript'
call plug#end()

"VIM CUSTOMISATION
"line numbers
set number
set relativenumber

"interface
syntax enable
" colorscheme pablo
set showmatch
set ruler
set cursorline
au VimEnter * highlight clear SignColumn

"searching
set incsearch
set hlsearch

"indentation behaviour
set noexpandtab
set copyindent
set preserveindent
set softtabstop=0
set shiftwidth=2
set tabstop=2

"PLUG-IN CONFIG: fzf
nnoremap <C-p> :Files<Cr>

"PLUG-IN CONFIG: ALE
let g:ale_fix_on_save = 1

"PLUG-IN CONFIG: vim-multiple-cursors
let g:multi_cursor_use_default_mapping=0

" Mapping
let g:multi_cursor_start_word_key      = 'gb'
let g:multi_cursor_select_all_word_key = 'gB'
" let g:multi_cursor_start_key           = 'g<C-n>'
" let g:multi_cursor_select_all_key      = 'g<A-n>'
let g:multi_cursor_next_key            = 'gb'
let g:multi_cursor_prev_key            = 'gv'
" let g:multi_cursor_skip_key            = '<C-x>'
let g:multi_cursor_quit_key            = '<Esc>'
